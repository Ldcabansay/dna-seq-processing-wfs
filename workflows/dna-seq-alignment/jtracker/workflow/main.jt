# This workflow preprocesses WGS/WXS sequences in FASTQ or BAM (from local or from
# data object repository), then runs BWA-MEM alignment to produce uniformly aligned
# BAM or CRAM ready for variant calling.

workflow:
  name:  dna-seq-alignment
  version: "0.2.6"

  input:
    song_collab_url:
      type: string
      default: "https://song.cancercollaboratory.org"
    song_aws_url:
      type: string
      default: "https://virginia.song.icgc.org"
    exp_tsv:
      type: string
      is_file: true
      is_required: true
    rg_tsv:
      type: string
      is_file: true
      is_required: true
    file_tsv:
      type: string
      is_file: true
      is_required: true
    seq_exp_json_name:
      type: string
      default: "seq_exp.json"
    seq_rg_json_name:
      type: string
      default: "seq_rg.json"
    seq_files:
      type: arrary
      items:
        type: string
        is_file: true
    cpus:
      type: integer
    aligned_lane_prefix:
      type: string
      default: "grch38-aligned"
    aligned_seq_output_format:
      type: arrary
      items:
        type: string
    markdup:
      type: boolean
      default: true
    metadata_validation.tool_url:
      type: string
      is_file: true
      default: "[metadata-validation.cwl]https://raw.githubusercontent.com/icgc-argo/dna-seq-processing-tools/metadata-validation.0.1.3/tools/metadata-validation/metadata-validation.cwl"
    sequence_download.tool_url:
      type: string
      is_file: true
      default: "[score-download.cwl]https://raw.githubusercontent.com/icgc-argo/data-processing-utility-tools/score-download.0.1.5/tools/score-download/score-download.cwl"
    sequence_validation.tool_url:
      type: string
      is_file: true
      default: "[seq-validation.cwl]https://raw.githubusercontent.com/icgc-argo/dna-seq-processing-tools/seq-validation.0.1.4/tools/seq-validation/seq-validation.cwl"
    preprocess.tool_url:
      type: string
      is_file: true
      default: "[seq-data-to-lane-bam.cwl]https://raw.githubusercontent.com/icgc-argo/dna-seq-processing-tools/seq-data-to-lane-bam.0.1.4/tools/seq-data-to-lane-bam/seq-data-to-lane-bam.cwl"
    preprocess.reads_max_discard_fraction:
      type: number
      default: 0.05
    alignment_wf.tool_url:
      type: string
      is_file: true
      default: "[bwa-mem-subwf.cwl]https://raw.githubusercontent.com/icgc-argo/dna-seq-processing-wfs/0.2.4/workflows/bwa-mem-subwf/cwl/bwa-mem-subwf.cwl"
    markdup.tool_url:
      type: string
      is_file: true
      default: "[bam-merge-sort-markdup.cwl]https://raw.githubusercontent.com/icgc-argo/dna-seq-processing-tools/bam-merge-sort-markdup.0.1.4/tools/bam-merge-sort-markdup/bam-merge-sort-markdup.cwl"
    payload_gen_and_s3_submit_wf.tool_url:
      type: string
      is_file: true
      default: "[payload-gen-and-s3-submit-wf.cwl]https://raw.githubusercontent.com/icgc-argo/dna-seq-processing-wfs/payload-gen-and-s3-submit-wf.0.2.0/workflows/payload-gen-and-s3-submit-wf/cwl/payload-gen-and-s3-submit-wf.cwl"
    payload_s3_submit.tool_url:
      type: string
      default: "[payload-ceph-submission.cwl]https://raw.githubusercontent.com/icgc-argo/data-processing-utility-tools/payload-ceph-submission.0.1.6/tools/payload-ceph-submission/payload-ceph-submission.cwl"
    s3_upload_wf.tool_url:
      type: string
      is_file: true
      default: "[s3-upload-wf.cwl]https://raw.githubusercontent.com/icgc-argo/dna-seq-processing-wfs/s3-upload-wf.0.1.1/workflows/s3-upload-wf/cwl/s3-upload-wf.cwl"
    endpoint_url:
      type: string
      default: "https://object.cancercollaboratory.org:9080"
    bucket_name:
      type: string
      default: "argo-test"
    seq_source_repository:
      type: string
      default: "collab"
    credentials_file:
      type: string
      is_file: true
      default: "/home/ubuntu/.aws/credentials"
    score_token_file:
      type: string
      is_file: true
      default: "/home/ubuntu/.accessToken"
    payload_schema_version:
      type: string
      default: "0.1.0-rc.2"
    ref_genome_gz_amb:
      type: string
      is_file: true
      default: "[GRCh38_hla_decoy_ebv.fa.gz.amb]https://object.cancercollaboratory.org:9080/swift/v1/genomics-public-data/reference-genome/GRCh38_hla_decoy_ebv/GRCh38_hla_decoy_ebv.fa.gz.amb"
    ref_genome_gz_sa:
      type: string
      is_file: true
      default: "[GRCh38_hla_decoy_ebv.fa.gz.sa]https://object.cancercollaboratory.org:9080/swift/v1/genomics-public-data/reference-genome/GRCh38_hla_decoy_ebv/GRCh38_hla_decoy_ebv.fa.gz.sa"
    ref_genome_gz_pac:
      type: string
      is_file: true
      default: "[GRCh38_hla_decoy_ebv.fa.gz.pac]https://object.cancercollaboratory.org:9080/swift/v1/genomics-public-data/reference-genome/GRCh38_hla_decoy_ebv/GRCh38_hla_decoy_ebv.fa.gz.pac"
    ref_genome_gz_ann:
      type: string
      is_file: true
      default: "[GRCh38_hla_decoy_ebv.fa.gz.ann]https://object.cancercollaboratory.org:9080/swift/v1/genomics-public-data/reference-genome/GRCh38_hla_decoy_ebv/GRCh38_hla_decoy_ebv.fa.gz.ann"
    ref_genome_gz_bwt:
      type: string
      is_file: true
      default: "[GRCh38_hla_decoy_ebv.fa.gz.bwt]https://object.cancercollaboratory.org:9080/swift/v1/genomics-public-data/reference-genome/GRCh38_hla_decoy_ebv/GRCh38_hla_decoy_ebv.fa.gz.bwt"
    ref_genome_gz_alt:
      type: string
      is_file: true
      default: "[GRCh38_hla_decoy_ebv.fa.gz.alt]https://object.cancercollaboratory.org:9080/swift/v1/genomics-public-data/reference-genome/GRCh38_hla_decoy_ebv/GRCh38_hla_decoy_ebv.fa.gz.alt"
    ref_genome_gz_fai:
      type: string
      is_file: true
      default: "[GRCh38_hla_decoy_ebv.fa.gz.fai]https://object.cancercollaboratory.org:9080/swift/v1/genomics-public-data/reference-genome/GRCh38_hla_decoy_ebv/GRCh38_hla_decoy_ebv.fa.gz.fai"
    ref_genome_gz:
      type: string
      is_file: true
      default: "[GRCh38_hla_decoy_ebv.fa.gz]https://object.cancercollaboratory.org:9080/swift/v1/genomics-public-data/reference-genome/GRCh38_hla_decoy_ebv/GRCh38_hla_decoy_ebv.fa.gz"
    ref_genome_fai:
      type: string
      is_file: true
      default: "[GRCh38_hla_decoy_ebv.fa.fai]https://object.cancercollaboratory.org:9080/swift/v1/genomics-public-data/reference-genome/GRCh38_hla_decoy_ebv/GRCh38_hla_decoy_ebv.fa.fai"
    ref_genome:
      type: string
      is_file: true
      default: "[GRCh38_hla_decoy_ebv.fa]https://object.cancercollaboratory.org:9080/swift/v1/genomics-public-data/reference-genome/GRCh38_hla_decoy_ebv/GRCh38_hla_decoy_ebv.fa"


  tasks:
    metadata_validation:
      tool: metadata_validation
      input:
        exp_tsv: exp_tsv
        rg_tsv: rg_tsv
        file_tsv: file_tsv
        seq_exp_json_name: seq_exp_json_name
        seq_rg_json_name: seq_rg_json_name
        tool_url: metadata_validation.tool_url

    seq_exp_payload_s3_submit:
      tool: payload_s3_submit
      input:
        metadata: seq_rg_json@metadata_validation
        payload: seq_exp_json@metadata_validation
        credentials_file: credentials_file
        endpoint_url: endpoint_url
        bucket_name: bucket_name
        tool_url: payload_s3_submit.tool_url

    sequence_download:
      tool: sequence_download
      input:
        seq_files: seq_files
        file_tsv: file_tsv
        repository: seq_source_repository
        token_file: score_token_file
        tool_url: sequence_download.tool_url
      depends_on:
        - completed@metadata_validation

    sequence_validation:
      tool: sequence_validation
      input:
        seq_rg_json: seq_rg_json@metadata_validation
        seq_files: seq_files@sequence_download
        tool_url: sequence_validation.tool_url

    preprocess:
      tool: preprocess
      input:
        seq_files: seq_files@sequence_download
        seq_rg_json: seq_rg_json@metadata_validation
        reads_max_discard_fraction: preprocess.reads_max_discard_fraction
        tool_url: preprocess.tool_url
      depends_on:
        - completed@sequence_validation

    lane_seq_payload_gen_and_s3_submit_wf:
      tool: payload_gen_and_s3_submit_wf
      input:
        bundle_type: bundle_type@preprocess
        payload_schema_version: payload_schema_version
        files_to_upload: lane_bams@preprocess
        user_submit_metadata: seq_rg_json@metadata_validation
        credentials_file: credentials_file
        endpoint_url: endpoint_url
        bucket_name: bucket_name
        tool_url: payload_gen_and_s3_submit_wf.tool_url

    lane_seq_s3_upload:
      tool: s3_upload_wf
      input:
        endpoint_url: endpoint_url
        bucket_name: bucket_name
        s3_credential_file: credentials_file
        bundle_type: bundle_type@preprocess
        payload_jsons: payload@lane_seq_payload_gen_and_s3_submit_wf
        upload_files: lane_bams@preprocess
        tool_url: s3_upload_wf.tool_url

    alignment_wf:
      tool: alignment_wf
      input:
        input_bam: lane_bams@preprocess
        ref_genome_gz: ref_genome_gz
        ref_genome_gz_amb: ref_genome_gz_amb
        ref_genome_gz_sa: ref_genome_gz_sa
        ref_genome_gz_pac: ref_genome_gz_pac
        ref_genome_gz_ann: ref_genome_gz_ann
        ref_genome_gz_bwt: ref_genome_gz_bwt
        ref_genome_gz_alt: ref_genome_gz_alt
        ref_genome_gz_fai: ref_genome_gz_fai
        aligned_lane_prefix: aligned_lane_prefix
        tool_url: alignment_wf.tool_url

    markdup:
      tool: markdup
      input:
        aligned_lane_bams: aligned_lane_bam@alignment_wf
        aligned_basename: aligned_basename@preprocess
        ref_genome: ref_genome
        ref_genome_fai: ref_genome_fai
        markdup: markdup
        output_format: aligned_seq_output_format
        tool_url: markdup.tool_url

    aligned_seq_payload_gen_and_s3_submit_wf:
      tool: payload_gen_and_s3_submit_wf
      input:
        bundle_type: bundle_type@markdup
        payload_schema_version: payload_schema_version
        files_to_upload: aligned_seq@markdup
        user_submit_metadata: seq_rg_json@metadata_validation
        analysis_input_payload: payload@lane_seq_payload_gen_and_s3_submit_wf
        credentials_file: credentials_file
        endpoint_url: endpoint_url
        bucket_name: bucket_name
        tool_url: payload_gen_and_s3_submit_wf.tool_url

    aligned_seq_s3_upload:
      tool: s3_upload_wf
      input:
        endpoint_url: endpoint_url
        bucket_name: bucket_name
        s3_credential_file: credentials_file
        bundle_type: bundle_type@markdup
        payload_jsons: payload@aligned_seq_payload_gen_and_s3_submit_wf
        upload_files: aligned_seq@markdup
        tool_url: s3_upload_wf.tool_url

# A workflow is made up with one or more tools
# Each tool can have its own docker imagine if desirable
tools:
  metadata_validation:
    command: cwltool_launcher.py

    input:
      exp_tsv:
        type: string
        is_file: true
      rg_tsv:
        type: string
        is_file: true
      file_tsv:
        type: string
        is_file: true
      seq_exp_json_name:
        type: string
      seq_rg_json_name:
        type: string
      tool_url:
        type: string
        is_file: true

    output:
      seq_exp_json:
        type: string
        is_file: true
      seq_rg_json:
        type: string
        is_file: true

  payload_s3_submit:
    command: cwltool_launcher.py
    input:
      metadata:
        type: string
        is_file: true
      payload:
        type: string
        is_file: true
      credentials_file:
        type: string
        is_file: true
      endpoint_url:
        type: string
      bucket_name:
        type: string
      tool_url:
        type: string

  sequence_download:
    command: cwltool_launcher.py
    input:
      seq_files:
        type: array
        items:
          type: string
          is_file: true
      file_tsv:
        type: string
        is_file: true
      repository:
        type: string
      token_file:
        type: string
        is_file: true
      tool_url:
        type: string
        is_file: true
    output:
      seq_files:
        type: array
        items:
          type: string
          is_file: true

  sequence_validation:
    command: cwltool_launcher.py

    input:
      seq_rg_json:
        type: string
        is_file: true
      seq_files:
        type: array
        items:
          type: string
          is_file: true
      tool_url:
        type: string
        is_file: true

    output:
      seq_status:
        type: string

  preprocess:
    command: cwltool_launcher.py

    input:
      seq_rg_json:
        type: string
        is_file: true
      seq_files:
        type: array
        items:
          type: string
          is_file: true
      reads_max_discard_fraction:
        type: number
      tool_url:
        type: string
        is_file: true

    output:
      lane_bams:
        type: array
        items:
          type: string
          is_file: true
          glob_pattern: "*.bam"
      aligned_basename:
        type: string

  s3_upload_wf:
    command: cwltool_launcher.py
    input:
      endpoint_url:
        type: string
      bucket_name:
        type: string
      bundle_type:
        type: string
      payload_jsons:
        type: array
        items:
          type: string
          is_file: true
      s3_credential_file:
        type: File
      upload_files:
        type: array
        items:
          type: string
          is_file: true

  payload_gen_and_s3_submit_wf:
    command: cwltool_launcher.py
    input:
      bundle_type:
        type: string
      files_to_upload:
        type: array
        items:
          type: string
          is_file: true
      payload_schema_version:
        type: string
      user_submit_metadata:
        type: string
        is_file: true
      analysis_input_payload:
        type: array
        items:
          type: string
          is_file: true
      credentials_file:
        type: string
        is_file: true
      endpoint_url:
        type: string
      bucket_name:
        type: string
    output:
      payload:
        type: array
        items:
          type: string
          is_file: true

  alignment_wf:
    command: cwltool_launcher.py

    input:
      input_bam:
        type: array
        items:
          type: string
          is_file: true
          glob_pattern: "*.bam"
      ref_genome_gz:
        type: string
        is_file: true
      ref_genome_gz_amb:
        type: string
        is_file: true
      ref_genome_gz_sa:
        type: string
        is_file: true
      ref_genome_gz_pac:
        type: string
        is_file: true
      ref_genome_gz_ann:
        type: string
        is_file: true
      ref_genome_gz_bwt:
        type: string
        is_file: true
      ref_genome_gz_alt:
        type: string
        is_file: true
      ref_genome_gz_fai:
        type: string
        is_file: true
      cpus:
        type: integer
      aligned_lane_prefix:
        type: string
      tool_url:
        type: string
        is_file: true
    output:
      aligned_lane_bam:
        type: array
        items:
          type: string
          is_file: true
          glob_pattern: "*.bam"

  markdup:
    command: cwltool_launcher.py

    input:
      aligned_lane_bams:
        type: array
        items:
          type: string
          is_file: true
          glob_pattern: "*.bam"
      aligned_basename:
        type: string
      ref_genome:
        type: string
        is_file: true
      ref_genome_fai:
        type: string
        is_file: true
      cpus:
        type: integer
      markdup:
        type: boolean
      output_format:
        type: array
        items:
          type: string
      lossy:
        type: boolean
      tool_url:
        type: string
        is_file: true

    output:
      aligned_seq:
        type: array
        items:
          type: string
          is_file: true
      aligned_duplicate_metrics:
        type: string
        is_file: true
